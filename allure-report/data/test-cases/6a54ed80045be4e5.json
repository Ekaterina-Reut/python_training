{
  "uid" : "6a54ed80045be4e5",
  "name" : "test_add_contact[None:last_namef~\"vut+, first_name_j, None, None]",
  "fullName" : "test.test_add_contact#test_add_contact",
  "historyId" : "378e7e0587da48a836ef853f320b4b79",
  "time" : {
    "start" : 1590251741215,
    "stop" : 1590251749064,
    "duration" : 7849
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert [186:1Wfd, 1Tre, None, None,\\n 190:last_name+, first_name Fx^Nu.c, None, None,\\n 192:1Wfd, 1Tre, None, None,\\n 195:last_name-, first_namez `xf,g, None, None,\\n 196:1Wfd, 1Tre, None, None,\\n 197:last_name-, first_namez `xf,g, None, None,\\n 199:last_name-, first_namez `xf,g, None, None,\\n 200:last_name+, first_name Fx^Nu.c, None, None,\\n 201:last_name-, first_namez `xf,g, None, None,\\n 202:last_name+, first_name Fx^Nu.c, None, None,\\n 203:last_name-, first_namez `xf,g, None, None,\\n 204:last_name+, first_name Fx^Nu.c, None, None,\\n None:last_namef~\"vut+, first_name_j, None, None] == [186:1Wfd, 1Tre, None, None,\\n 190:last_name+, first_name Fx^Nu.c, None, None,\\n 192:1Wfd, 1Tre, None, None,\\n 195:last_name-, first_namez `xf,g, None, None,\\n 196:1Wfd, 1Tre, None, None,\\n 197:last_name-, first_namez `xf,g, None, None,\\n 199:last_name-, first_namez `xf,g, None, None,\\n 200:last_name+, first_name Fx^Nu.c, None, None,\\n 201:last_name-, first_namez `xf,g, None, None,\\n 202:last_name+, first_name Fx^Nu.c, None, None,\\n 203:last_name-, first_namez `xf,g, None, None,\\n 204:last_name+, first_name Fx^Nu.c, None, None]",
  "statusTrace" : "app = <fixture.application.Application object at 0x0685E328>\ndb = <fixture.db.DbFixture object at 0x0685E0A0>\njson_contacts = None:last_namef~\"vut+, first_name_j, None, None\n\n    def test_add_contact(app, db, json_contacts):\n        contact = json_contacts\n        with allure.step('Given a contact list'):\n            old_contacts = db.get_contact_list()\n        with allure.step('When I add a contact %s to the list' % contact):\n            app.contact.create(contact)\n        with allure.step('Then the new contact list is equal to the old list with the added contact'):\n            # assert len(old_contacts) + 1 == app.contact.count()\n            new_contacts = db.get_contact_list()\n            old_contacts.append(contact)\n>           assert sorted(old_contacts, key=Contact.id_or_max) == sorted(new_contacts, key=Contact.id_or_max)\nE           assert [186:1Wfd, 1Tre, None, None,\\n 190:last_name+, first_name Fx^Nu.c, None, None,\\n 192:1Wfd, 1Tre, None, None,\\n 195:last_name-, first_namez `xf,g, None, None,\\n 196:1Wfd, 1Tre, None, None,\\n 197:last_name-, first_namez `xf,g, None, None,\\n 199:last_name-, first_namez `xf,g, None, None,\\n 200:last_name+, first_name Fx^Nu.c, None, None,\\n 201:last_name-, first_namez `xf,g, None, None,\\n 202:last_name+, first_name Fx^Nu.c, None, None,\\n 203:last_name-, first_namez `xf,g, None, None,\\n 204:last_name+, first_name Fx^Nu.c, None, None,\\n None:last_namef~\"vut+, first_name_j, None, None] == [186:1Wfd, 1Tre, None, None,\\n 190:last_name+, first_name Fx^Nu.c, None, None,\\n 192:1Wfd, 1Tre, None, None,\\n 195:last_name-, first_namez `xf,g, None, None,\\n 196:1Wfd, 1Tre, None, None,\\n 197:last_name-, first_namez `xf,g, None, None,\\n 199:last_name-, first_namez `xf,g, None, None,\\n 200:last_name+, first_name Fx^Nu.c, None, None,\\n 201:last_name-, first_namez `xf,g, None, None,\\n 202:last_name+, first_name Fx^Nu.c, None, None,\\n 203:last_name-, first_namez `xf,g, None, None,\\n 204:last_name+, first_name Fx^Nu.c, None, None]\n\ntest\\test_add_contact.py:16: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "stop",
    "time" : {
      "start" : 1590251723231,
      "stop" : 1590251723231,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "db",
    "time" : {
      "start" : 1590251723231,
      "stop" : 1590251723237,
      "duration" : 6
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "app",
    "time" : {
      "start" : 1590251740955,
      "stop" : 1590251741214,
      "duration" : 259
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert [186:1Wfd, 1Tre, None, None,\\n 190:last_name+, first_name Fx^Nu.c, None, None,\\n 192:1Wfd, 1Tre, None, None,\\n 195:last_name-, first_namez `xf,g, None, None,\\n 196:1Wfd, 1Tre, None, None,\\n 197:last_name-, first_namez `xf,g, None, None,\\n 199:last_name-, first_namez `xf,g, None, None,\\n 200:last_name+, first_name Fx^Nu.c, None, None,\\n 201:last_name-, first_namez `xf,g, None, None,\\n 202:last_name+, first_name Fx^Nu.c, None, None,\\n 203:last_name-, first_namez `xf,g, None, None,\\n 204:last_name+, first_name Fx^Nu.c, None, None,\\n None:last_namef~\"vut+, first_name_j, None, None] == [186:1Wfd, 1Tre, None, None,\\n 190:last_name+, first_name Fx^Nu.c, None, None,\\n 192:1Wfd, 1Tre, None, None,\\n 195:last_name-, first_namez `xf,g, None, None,\\n 196:1Wfd, 1Tre, None, None,\\n 197:last_name-, first_namez `xf,g, None, None,\\n 199:last_name-, first_namez `xf,g, None, None,\\n 200:last_name+, first_name Fx^Nu.c, None, None,\\n 201:last_name-, first_namez `xf,g, None, None,\\n 202:last_name+, first_name Fx^Nu.c, None, None,\\n 203:last_name-, first_namez `xf,g, None, None,\\n 204:last_name+, first_name Fx^Nu.c, None, None]",
    "statusTrace" : "app = <fixture.application.Application object at 0x0685E328>\ndb = <fixture.db.DbFixture object at 0x0685E0A0>\njson_contacts = None:last_namef~\"vut+, first_name_j, None, None\n\n    def test_add_contact(app, db, json_contacts):\n        contact = json_contacts\n        with allure.step('Given a contact list'):\n            old_contacts = db.get_contact_list()\n        with allure.step('When I add a contact %s to the list' % contact):\n            app.contact.create(contact)\n        with allure.step('Then the new contact list is equal to the old list with the added contact'):\n            # assert len(old_contacts) + 1 == app.contact.count()\n            new_contacts = db.get_contact_list()\n            old_contacts.append(contact)\n>           assert sorted(old_contacts, key=Contact.id_or_max) == sorted(new_contacts, key=Contact.id_or_max)\nE           assert [186:1Wfd, 1Tre, None, None,\\n 190:last_name+, first_name Fx^Nu.c, None, None,\\n 192:1Wfd, 1Tre, None, None,\\n 195:last_name-, first_namez `xf,g, None, None,\\n 196:1Wfd, 1Tre, None, None,\\n 197:last_name-, first_namez `xf,g, None, None,\\n 199:last_name-, first_namez `xf,g, None, None,\\n 200:last_name+, first_name Fx^Nu.c, None, None,\\n 201:last_name-, first_namez `xf,g, None, None,\\n 202:last_name+, first_name Fx^Nu.c, None, None,\\n 203:last_name-, first_namez `xf,g, None, None,\\n 204:last_name+, first_name Fx^Nu.c, None, None,\\n None:last_namef~\"vut+, first_name_j, None, None] == [186:1Wfd, 1Tre, None, None,\\n 190:last_name+, first_name Fx^Nu.c, None, None,\\n 192:1Wfd, 1Tre, None, None,\\n 195:last_name-, first_namez `xf,g, None, None,\\n 196:1Wfd, 1Tre, None, None,\\n 197:last_name-, first_namez `xf,g, None, None,\\n 199:last_name-, first_namez `xf,g, None, None,\\n 200:last_name+, first_name Fx^Nu.c, None, None,\\n 201:last_name-, first_namez `xf,g, None, None,\\n 202:last_name+, first_name Fx^Nu.c, None, None,\\n 203:last_name-, first_namez `xf,g, None, None,\\n 204:last_name+, first_name Fx^Nu.c, None, None]\n\ntest\\test_add_contact.py:16: AssertionError",
    "steps" : [ {
      "name" : "Given a contact list",
      "time" : {
        "start" : 1590251741215,
        "stop" : 1590251741218,
        "duration" : 3
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "When I add a contact None:last_namef~\"vut+, first_name_j, None, None to the list",
      "time" : {
        "start" : 1590251741218,
        "stop" : 1590251749059,
        "duration" : 7841
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "Then the new contact list is equal to the old list with the added contact",
      "time" : {
        "start" : 1590251749059,
        "stop" : 1590251749064,
        "duration" : 5
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: assert [186:1Wfd, 1Tre, None, None,\\n 190:last_name+, first_name Fx^Nu.c, None, None,\\n 192:1Wfd, 1Tre, None, None,\\n 195:last_name-, first_namez `xf,g, None, None,\\n 196:1Wfd, 1Tre, None, None,\\n 197:last_name-, first_namez `xf,g, None, None,\\n 199:last_name-, first_namez `xf,g, None, None,\\n 200:last_name+, first_name Fx^Nu.c, None, None,\\n 201:last_name-, first_namez `xf,g, None, None,\\n 202:last_name+, first_name Fx^Nu.c, None, None,\\n 203:last_name-, first_namez `xf,g, None, None,\\n 204:last_name+, first_name Fx^Nu.c, None, None,\\n None:last_namef~\"vut+, first_name_j, None, None] == [186:1Wfd, 1Tre, None, None,\\n 190:last_name+, first_name Fx^Nu.c, None, None,\\n 192:1Wfd, 1Tre, None, None,\\n 195:last_name-, first_namez `xf,g, None, None,\\n 196:1Wfd, 1Tre, None, None,\\n 197:last_name-, first_namez `xf,g, None, None,\\n 199:last_name-, first_namez `xf,g, None, None,\\n 200:last_name+, first_name Fx^Nu.c, None, None,\\n 201:last_name-, first_namez `xf,g, None, None,\\n 202:last_name+, first_name Fx^Nu.c, None, None,\\n 203:last_name-, first_namez `xf,g, None, None,\\n 204:last_name+, first_name Fx^Nu.c, None, None]\n",
      "statusTrace" : "  File \"D:\\education\\python\\course\\Py_for_testers\\work\\python_training\\test\\test_add_contact.py\", line 16, in test_add_contact\n    assert sorted(old_contacts, key=Contact.id_or_max) == sorted(new_contacts, key=Contact.id_or_max)\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "stepsCount" : 0,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "stepsCount" : 3,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "stop::fin",
    "time" : {
      "start" : 1590251805389,
      "stop" : 1590251806430,
      "duration" : 1041
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "db::fin",
    "time" : {
      "start" : 1590251806431,
      "stop" : 1590251806431,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "test"
  }, {
    "name" : "suite",
    "value" : "test_add_contact"
  }, {
    "name" : "host",
    "value" : "EYAZEVICH"
  }, {
    "name" : "thread",
    "value" : "7180-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test.test_add_contact"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "json_contacts",
    "value" : "None:last_namef~\"vut+, first_name_j, None, None"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ {
      "uid" : "a9de45bc4abae3f7",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert [186:1Wfd, 1Tre, None, None,\\n 190:last_name+, first_name Fx^Nu.c, None, None,\\n 192:1Wfd, 1Tre, None, None,\\n 195:last_name-, first_namez `xf,g, None, None,\\n 196:last_name+, first_name Fx^Nu.c, None, None,\\n 197:last_name-, first_namez `xf,g, None, None,\\n 198:last_name+, first_name Fx^Nu.c, None, None,\\n None:last_namef~\"vut+, first_name_j, None, None] == [186:1Wfd, 1Tre, None, None,\\n 190:last_name+, first_name Fx^Nu.c, None, None,\\n 192:1Wfd, 1Tre, None, None,\\n 195:last_name-, first_namez `xf,g, None, None,\\n 196:last_name+, first_name Fx^Nu.c, None, None,\\n 197:last_name-, first_namez `xf,g, None, None,\\n 198:last_name+, first_name Fx^Nu.c, None, None]",
      "time" : {
        "start" : 1590251197191,
        "stop" : 1590251205280,
        "duration" : 8089
      }
    }, {
      "uid" : "4e109f12e1979f8e",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert [186:1Wfd, 1Tre, None, None,\\n 190:last_name+, first_name Fx^Nu.c, None, None,\\n 192:last_name+, first_name Fx^Nu.c, None, None,\\n 193:1Wfd, 1Tre, None, None,\\n 195:last_name-, first_namez `xf,g, None, None,\\n 196:last_name+, first_name Fx^Nu.c, None, None,\\n None:last_namef~\"vut+, first_name_j, None, None] == [186:1Wfd, 1Tre, None, None,\\n 190:last_name+, first_name Fx^Nu.c, None, None,\\n 192:last_name+, first_name Fx^Nu.c, None, None,\\n 193:1Wfd, 1Tre, None, None,\\n 195:last_name-, first_namez `xf,g, None, None,\\n 196:last_name+, first_name Fx^Nu.c, None, None]",
      "time" : {
        "start" : 1590250639167,
        "stop" : 1590250647190,
        "duration" : 8023
      }
    }, {
      "uid" : "d2c79df051adaaae",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert [186:1Wfd, 1Tre, None, None,\\n 187:1Wfd, 1Tre, None, None,\\n 190:last_name+, first_name Fx^Nu.c, None, None,\\n 192:last_name+, first_name Fx^Nu.c, None, None,\\n 193:1Wfd, 1Tre, None, None,\\n None:last_namef~\"vut+, first_name_j, None, None] == [186:1Wfd, 1Tre, None, None,\\n 187:1Wfd, 1Tre, None, None,\\n 190:last_name+, first_name Fx^Nu.c, None, None,\\n 192:last_name+, first_name Fx^Nu.c, None, None,\\n 193:1Wfd, 1Tre, None, None]",
      "time" : {
        "start" : 1590250493002,
        "stop" : 1590250500958,
        "duration" : 7956
      }
    }, {
      "uid" : "90e5812bdb159be9",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert [186:1Wfd, 1Tre, None, None,\\n 187:1Wfd, 1Tre, None, None,\\n 190:last_name+, first_name Fx^Nu.c, None, None,\\n 192:last_name+, first_name Fx^Nu.c, None, None,\\n None:last_namef~\"vut+, first_name_j, None, None] == [186:1Wfd, 1Tre, None, None,\\n 187:1Wfd, 1Tre, None, None,\\n 190:last_name+, first_name Fx^Nu.c, None, None,\\n 192:last_name+, first_name Fx^Nu.c, None, None]",
      "time" : {
        "start" : 1590250366282,
        "stop" : 1590250373924,
        "duration" : 7642
      }
    }, {
      "uid" : "3206fc472bd46d20",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert [186:1Wfd, 1Tre, None, None,\\n 187:last_name-, first_namez `xf,g, None, None,\\n 190:last_name+, first_name Fx^Nu.c, None, None,\\n None:last_namef~\"vut+, first_name_j, None, None] == [186:1Wfd, 1Tre, None, None,\\n 187:last_name-, first_namez `xf,g, None, None,\\n 190:last_name+, first_name Fx^Nu.c, None, None]",
      "time" : {
        "start" : 1590250244052,
        "stop" : 1590250252101,
        "duration" : 8049
      }
    }, {
      "uid" : "ac2dcc6326e581f3",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert [186:1Wfd, 1Tre, None, None,\\n 187:last_name-, first_namez `xf,g, None, None,\\n None:last_namef~\"vut+, first_name_j, None, None] == [186:1Wfd, 1Tre, None, None, 187:last_name-, first_namez `xf,g, None, None]",
      "time" : {
        "start" : 1590250058230,
        "stop" : 1590250066168,
        "duration" : 7938
      }
    } ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "6a54ed80045be4e5.json",
  "parameterValues" : [ "None:last_namef~\"vut+, first_name_j, None, None" ]
}