<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2.1 (Python 3.8.2 on win32)" generated="20200523 22:01:15.301" rpa="false">
<suite id="s1" name="Rf" source="D:\education\python\course\Py_for_testers\work\python_training\rf">
<suite id="s1-s1" name="Contact Scenarios" source="D:\education\python\course\Py_for_testers\work\python_training\rf\contact_scenarios.robot">
<kw name="Init Fixtures" library="rf.AddressBook" type="setup">
<status status="PASS" starttime="20200523 22:01:15.666" endtime="20200523 22:01:19.690"></status>
</kw>
<test id="s1-s1-t1" name="Add new contact">
<kw name="Get Contact List" library="rf.AddressBook">
<assign>
<var>${old_list}</var>
</assign>
<msg timestamp="20200523 22:01:19.696" level="INFO">${old_list} = [186:1Wfd, 1Tre, None, None, 190:last_name+, first_name Fx^Nu.c, None, None, 192:Last Name 2, First Name 2, None, None, 195:Last Name 2, First Name 2, None, None, 197:last_name-, first_namez `xf,g, No...</msg>
<status status="PASS" starttime="20200523 22:01:19.691" endtime="20200523 22:01:19.696"></status>
</kw>
<kw name="New Contact" library="rf.AddressBook">
<arguments>
<arg>First Name 1</arg>
<arg>Last Name 1</arg>
<arg>Address 1</arg>
</arguments>
<assign>
<var>${contact}</var>
</assign>
<msg timestamp="20200523 22:01:19.697" level="INFO">${contact} = None:Last Name 1, First Name 1, None, None</msg>
<status status="PASS" starttime="20200523 22:01:19.697" endtime="20200523 22:01:19.697"></status>
</kw>
<kw name="Create Contact" library="rf.AddressBook">
<arguments>
<arg>${contact}</arg>
</arguments>
<status status="PASS" starttime="20200523 22:01:19.698" endtime="20200523 22:01:20.994"></status>
</kw>
<kw name="Get Contact List" library="rf.AddressBook">
<assign>
<var>${new_list}</var>
</assign>
<msg timestamp="20200523 22:01:20.998" level="INFO">${new_list} = [186:1Wfd, 1Tre, None, None, 190:last_name+, first_name Fx^Nu.c, None, None, 192:Last Name 2, First Name 2, None, None, 195:Last Name 2, First Name 2, None, None, 197:last_name-, first_namez `xf,g, No...</msg>
<status status="PASS" starttime="20200523 22:01:20.994" endtime="20200523 22:01:20.999"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${old_list}</arg>
<arg>${contact}</arg>
</arguments>
<status status="PASS" starttime="20200523 22:01:20.999" endtime="20200523 22:01:20.999"></status>
</kw>
<kw name="Contact Lists Should Be Equal" library="rf.AddressBook">
<arguments>
<arg>${new_list}</arg>
<arg>${old_list}</arg>
</arguments>
<status status="PASS" starttime="20200523 22:01:20.999" endtime="20200523 22:01:21.000"></status>
</kw>
<status status="PASS" starttime="20200523 22:01:19.690" endtime="20200523 22:01:21.000" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Modify contact">
<kw name="Get Contact List" library="rf.AddressBook">
<assign>
<var>${old_list}</var>
</assign>
<msg timestamp="20200523 22:01:21.006" level="INFO">${old_list} = [186:1Wfd, 1Tre, None, None, 190:last_name+, first_name Fx^Nu.c, None, None, 192:Last Name 2, First Name 2, None, None, 195:Last Name 2, First Name 2, None, None, 197:last_name-, first_namez `xf,g, No...</msg>
<status status="PASS" starttime="20200523 22:01:21.001" endtime="20200523 22:01:21.006"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${old_list}</arg>
</arguments>
<assign>
<var>${len}</var>
</assign>
<msg timestamp="20200523 22:01:21.007" level="INFO">Length is 13</msg>
<msg timestamp="20200523 22:01:21.007" level="INFO">${len} = 13</msg>
<status status="PASS" starttime="20200523 22:01:21.006" endtime="20200523 22:01:21.007"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>random.randrange(${len})</arg>
<arg>random</arg>
</arguments>
<assign>
<var>${index}</var>
</assign>
<msg timestamp="20200523 22:01:21.008" level="INFO">${index} = 9</msg>
<status status="PASS" starttime="20200523 22:01:21.008" endtime="20200523 22:01:21.008"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${old_list}</arg>
<arg>${index}</arg>
</arguments>
<assign>
<var>${contact_old}</var>
</assign>
<msg timestamp="20200523 22:01:21.009" level="INFO">${contact_old} = 207:Last Name 1, First Name 1, None, None</msg>
<status status="PASS" starttime="20200523 22:01:21.008" endtime="20200523 22:01:21.009"></status>
</kw>
<kw name="Modified Contact" library="rf.AddressBook">
<arguments>
<arg>First Name 2</arg>
<arg>Last Name 2</arg>
<arg>Address 2</arg>
<arg>${contact_old}</arg>
</arguments>
<assign>
<var>${contact_new}</var>
</assign>
<msg timestamp="20200523 22:01:21.010" level="INFO">${contact_new} = 207:Last Name 2, First Name 2, None, None</msg>
<status status="PASS" starttime="20200523 22:01:21.009" endtime="20200523 22:01:21.010"></status>
</kw>
<kw name="Modify Contact" library="rf.AddressBook">
<arguments>
<arg>${contact_old}</arg>
<arg>${contact_new}</arg>
</arguments>
<status status="PASS" starttime="20200523 22:01:21.010" endtime="20200523 22:01:22.263"></status>
</kw>
<kw name="Get Contact List" library="rf.AddressBook">
<assign>
<var>${new_list}</var>
</assign>
<msg timestamp="20200523 22:01:22.267" level="INFO">${new_list} = [186:1Wfd, 1Tre, None, None, 190:last_name+, first_name Fx^Nu.c, None, None, 192:Last Name 2, First Name 2, None, None, 195:Last Name 2, First Name 2, None, None, 197:last_name-, first_namez `xf,g, No...</msg>
<status status="PASS" starttime="20200523 22:01:22.263" endtime="20200523 22:01:22.267"></status>
</kw>
<kw name="Remove Values From List" library="Collections">
<doc>Removes all occurrences of given ``values`` from ``list``.</doc>
<arguments>
<arg>${old_list}</arg>
<arg>${contact_old}</arg>
</arguments>
<status status="PASS" starttime="20200523 22:01:22.267" endtime="20200523 22:01:22.267"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${old_list}</arg>
<arg>${contact_new}</arg>
</arguments>
<status status="PASS" starttime="20200523 22:01:22.267" endtime="20200523 22:01:22.268"></status>
</kw>
<kw name="Log List" library="Collections">
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<arguments>
<arg>${old_list}</arg>
</arguments>
<msg timestamp="20200523 22:01:22.268" level="INFO">List length is 13 and it contains following items:
0: 186:1Wfd, 1Tre, None, None
1: 190:last_name+, first_name Fx^Nu.c, None, None
2: 192:Last Name 2, First Name 2, None, None
3: 195:Last Name 2, First Name 2, None, None
4: 197:last_name-, first_namez `xf,g, None, None
5: 202:last_name+, first_name Fx^Nu.c, None, None
6: 204:last_name+, first_name Fx^Nu.c, None, None
7: 205:1Wfd, 1Tre, None, None
8: 206:last_name+, first_name Fx^Nu.c, None, None
9: 208:Last Name 1, First Name 1, None, None
10: 209:Last Name 1, First Name 1, None, None
11: 210:Last Name 1, First Name 1, None, None
12: 207:Last Name 2, First Name 2, None, None</msg>
<status status="PASS" starttime="20200523 22:01:22.268" endtime="20200523 22:01:22.268"></status>
</kw>
<kw name="Log List" library="Collections">
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<arguments>
<arg>${new_list}</arg>
</arguments>
<msg timestamp="20200523 22:01:22.268" level="INFO">List length is 13 and it contains following items:
0: 186:1Wfd, 1Tre, None, None
1: 190:last_name+, first_name Fx^Nu.c, None, None
2: 192:Last Name 2, First Name 2, None, None
3: 195:Last Name 2, First Name 2, None, None
4: 197:last_name-, first_namez `xf,g, None, None
5: 202:last_name+, first_name Fx^Nu.c, None, None
6: 204:last_name+, first_name Fx^Nu.c, None, None
7: 205:1Wfd, 1Tre, None, None
8: 206:last_name+, first_name Fx^Nu.c, None, None
9: 207:Last Name 2, First Name 2, None, None
10: 208:Last Name 1, First Name 1, None, None
11: 209:Last Name 1, First Name 1, None, None
12: 210:Last Name 1, First Name 1, None, None</msg>
<status status="PASS" starttime="20200523 22:01:22.268" endtime="20200523 22:01:22.268"></status>
</kw>
<kw name="Contact Lists Should Be Equal" library="rf.AddressBook">
<arguments>
<arg>${new_list}</arg>
<arg>${old_list}</arg>
</arguments>
<status status="PASS" starttime="20200523 22:01:22.269" endtime="20200523 22:01:22.269"></status>
</kw>
<status status="PASS" starttime="20200523 22:01:21.000" endtime="20200523 22:01:22.269" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Delete contact">
<kw name="Get Contact List" library="rf.AddressBook">
<assign>
<var>${old_list}</var>
</assign>
<msg timestamp="20200523 22:01:22.275" level="INFO">${old_list} = [186:1Wfd, 1Tre, None, None, 190:last_name+, first_name Fx^Nu.c, None, None, 192:Last Name 2, First Name 2, None, None, 195:Last Name 2, First Name 2, None, None, 197:last_name-, first_namez `xf,g, No...</msg>
<status status="PASS" starttime="20200523 22:01:22.272" endtime="20200523 22:01:22.275"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${old_list}</arg>
</arguments>
<assign>
<var>${len}</var>
</assign>
<msg timestamp="20200523 22:01:22.275" level="INFO">Length is 13</msg>
<msg timestamp="20200523 22:01:22.275" level="INFO">${len} = 13</msg>
<status status="PASS" starttime="20200523 22:01:22.275" endtime="20200523 22:01:22.275"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>random.randrange(${len})</arg>
<arg>random</arg>
</arguments>
<assign>
<var>${index}</var>
</assign>
<msg timestamp="20200523 22:01:22.276" level="INFO">${index} = 10</msg>
<status status="PASS" starttime="20200523 22:01:22.275" endtime="20200523 22:01:22.276"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${old_list}</arg>
<arg>${index}</arg>
</arguments>
<assign>
<var>${contact}</var>
</assign>
<msg timestamp="20200523 22:01:22.276" level="INFO">${contact} = 208:Last Name 1, First Name 1, None, None</msg>
<status status="PASS" starttime="20200523 22:01:22.276" endtime="20200523 22:01:22.276"></status>
</kw>
<kw name="Delete Contact" library="rf.AddressBook">
<arguments>
<arg>${contact}</arg>
</arguments>
<status status="PASS" starttime="20200523 22:01:22.276" endtime="20200523 22:01:22.815"></status>
</kw>
<kw name="Get Contact List" library="rf.AddressBook">
<assign>
<var>${new_list}</var>
</assign>
<msg timestamp="20200523 22:01:22.822" level="INFO">${new_list} = [186:1Wfd, 1Tre, None, None, 190:last_name+, first_name Fx^Nu.c, None, None, 192:Last Name 2, First Name 2, None, None, 195:Last Name 2, First Name 2, None, None, 197:last_name-, first_namez `xf,g, No...</msg>
<status status="PASS" starttime="20200523 22:01:22.815" endtime="20200523 22:01:22.822"></status>
</kw>
<kw name="Remove Values From List" library="Collections">
<doc>Removes all occurrences of given ``values`` from ``list``.</doc>
<arguments>
<arg>${old_list}</arg>
<arg>${contact}</arg>
</arguments>
<status status="PASS" starttime="20200523 22:01:22.822" endtime="20200523 22:01:22.823"></status>
</kw>
<kw name="Contact Lists Should Be Equal" library="rf.AddressBook">
<arguments>
<arg>${new_list}</arg>
<arg>${old_list}</arg>
</arguments>
<status status="PASS" starttime="20200523 22:01:22.823" endtime="20200523 22:01:22.825"></status>
</kw>
<status status="PASS" starttime="20200523 22:01:22.270" endtime="20200523 22:01:22.825" critical="yes"></status>
</test>
<kw name="Destroy Fixtures" library="rf.AddressBook" type="teardown">
<status status="PASS" starttime="20200523 22:01:22.827" endtime="20200523 22:01:24.968"></status>
</kw>
<status status="PASS" starttime="20200523 22:01:15.334" endtime="20200523 22:01:24.968"></status>
</suite>
<suite id="s1-s2" name="Group Scenarios" source="D:\education\python\course\Py_for_testers\work\python_training\rf\group_scenarios.robot">
<kw name="Init Fixtures" library="rf.AddressBook" type="setup">
<status status="PASS" starttime="20200523 22:01:24.989" endtime="20200523 22:01:29.093"></status>
</kw>
<test id="s1-s2-t1" name="Add new group">
<kw name="Get Group List" library="rf.AddressBook">
<assign>
<var>${old_list}</var>
</assign>
<msg timestamp="20200523 22:01:29.102" level="INFO">${old_list} = [268:lhjg;ytrff;qwew, 269:lhjg;ytrff;qwew, 272:name/3*!0l.;headerh.H"XH&lt;po?V A7g(8Pu;footert;a, 274:;;, 275:name;header%FE;footerr?A:WKx, 276:nameG@4;headeruY;footer, 277:name};header# FFcA=n09?;foote...</msg>
<status status="PASS" starttime="20200523 22:01:29.095" endtime="20200523 22:01:29.102"></status>
</kw>
<kw name="New Group" library="rf.AddressBook">
<arguments>
<arg>name1</arg>
<arg>header1</arg>
<arg>footer1</arg>
</arguments>
<assign>
<var>${group}</var>
</assign>
<msg timestamp="20200523 22:01:29.103" level="INFO">${group} = None:name1;header1;footer1</msg>
<status status="PASS" starttime="20200523 22:01:29.103" endtime="20200523 22:01:29.103"></status>
</kw>
<kw name="Create Group" library="rf.AddressBook">
<arguments>
<arg>${group}</arg>
</arguments>
<status status="PASS" starttime="20200523 22:01:29.103" endtime="20200523 22:01:30.318"></status>
</kw>
<kw name="Get Group List" library="rf.AddressBook">
<assign>
<var>${new_list}</var>
</assign>
<msg timestamp="20200523 22:01:30.327" level="INFO">${new_list} = [268:lhjg;ytrff;qwew, 269:lhjg;ytrff;qwew, 272:name/3*!0l.;headerh.H"XH&lt;po?V A7g(8Pu;footert;a, 274:;;, 275:name;header%FE;footerr?A:WKx, 276:nameG@4;headeruY;footer, 277:name};header# FFcA=n09?;foote...</msg>
<status status="PASS" starttime="20200523 22:01:30.318" endtime="20200523 22:01:30.327"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${old_list}</arg>
<arg>${group}</arg>
</arguments>
<status status="PASS" starttime="20200523 22:01:30.327" endtime="20200523 22:01:30.328"></status>
</kw>
<kw name="Group Lists Should Be Equal" library="rf.AddressBook">
<arguments>
<arg>${new_list}</arg>
<arg>${old_list}</arg>
</arguments>
<status status="PASS" starttime="20200523 22:01:30.328" endtime="20200523 22:01:30.329"></status>
</kw>
<status status="PASS" starttime="20200523 22:01:29.093" endtime="20200523 22:01:30.329" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Delete group">
<kw name="Get Group List" library="rf.AddressBook">
<assign>
<var>${old_list}</var>
</assign>
<msg timestamp="20200523 22:01:30.336" level="INFO">${old_list} = [268:lhjg;ytrff;qwew, 269:lhjg;ytrff;qwew, 272:name/3*!0l.;headerh.H"XH&lt;po?V A7g(8Pu;footert;a, 274:;;, 275:name;header%FE;footerr?A:WKx, 276:nameG@4;headeruY;footer, 277:name};header# FFcA=n09?;foote...</msg>
<status status="PASS" starttime="20200523 22:01:30.330" endtime="20200523 22:01:30.336"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${old_list}</arg>
</arguments>
<assign>
<var>${len}</var>
</assign>
<msg timestamp="20200523 22:01:30.337" level="INFO">Length is 158</msg>
<msg timestamp="20200523 22:01:30.338" level="INFO">${len} = 158</msg>
<status status="PASS" starttime="20200523 22:01:30.336" endtime="20200523 22:01:30.338"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>random.randrange(${len})</arg>
<arg>random</arg>
</arguments>
<assign>
<var>${index}</var>
</assign>
<msg timestamp="20200523 22:01:30.339" level="INFO">${index} = 66</msg>
<status status="PASS" starttime="20200523 22:01:30.339" endtime="20200523 22:01:30.339"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${old_list}</arg>
<arg>${index}</arg>
</arguments>
<assign>
<var>${group}</var>
</assign>
<msg timestamp="20200523 22:01:30.340" level="INFO">${group} = 348:nameG@4;headeruY;footer</msg>
<status status="PASS" starttime="20200523 22:01:30.340" endtime="20200523 22:01:30.340"></status>
</kw>
<kw name="Delete Group" library="rf.AddressBook">
<arguments>
<arg>${group}</arg>
</arguments>
<status status="PASS" starttime="20200523 22:01:30.340" endtime="20200523 22:01:30.846"></status>
</kw>
<kw name="Get Group List" library="rf.AddressBook">
<assign>
<var>${new_list}</var>
</assign>
<msg timestamp="20200523 22:01:30.855" level="INFO">${new_list} = [268:lhjg;ytrff;qwew, 269:lhjg;ytrff;qwew, 272:name/3*!0l.;headerh.H"XH&lt;po?V A7g(8Pu;footert;a, 274:;;, 275:name;header%FE;footerr?A:WKx, 276:nameG@4;headeruY;footer, 277:name};header# FFcA=n09?;foote...</msg>
<status status="PASS" starttime="20200523 22:01:30.847" endtime="20200523 22:01:30.856"></status>
</kw>
<kw name="Remove Values From List" library="Collections">
<doc>Removes all occurrences of given ``values`` from ``list``.</doc>
<arguments>
<arg>${old_list}</arg>
<arg>${group}</arg>
</arguments>
<status status="PASS" starttime="20200523 22:01:30.856" endtime="20200523 22:01:30.857"></status>
</kw>
<kw name="Group Lists Should Be Equal" library="rf.AddressBook">
<arguments>
<arg>${new_list}</arg>
<arg>${old_list}</arg>
</arguments>
<status status="PASS" starttime="20200523 22:01:30.859" endtime="20200523 22:01:30.860"></status>
</kw>
<status status="PASS" starttime="20200523 22:01:30.330" endtime="20200523 22:01:30.860" critical="yes"></status>
</test>
<kw name="Destroy Fixtures" library="rf.AddressBook" type="teardown">
<status status="PASS" starttime="20200523 22:01:30.860" endtime="20200523 22:01:33.011"></status>
</kw>
<status status="PASS" starttime="20200523 22:01:24.975" endtime="20200523 22:01:33.012"></status>
</suite>
<status status="PASS" starttime="20200523 22:01:15.305" endtime="20200523 22:01:33.018"></status>
</suite>
<statistics>
<total>
<stat pass="5" fail="0">Critical Tests</stat>
<stat pass="5" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="5" fail="0" id="s1" name="Rf">Rf</stat>
<stat pass="3" fail="0" id="s1-s1" name="Contact Scenarios">Rf.Contact Scenarios</stat>
<stat pass="2" fail="0" id="s1-s2" name="Group Scenarios">Rf.Group Scenarios</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
